// +build !ignore_autogenerated_openshift

// This file was autogenerated by defaulter-gen. Do not edit it manually!

package v1

import (
	runtime "k8s.io/kubernetes/pkg/runtime"
)

// RegisterDefaults adds defaulters functions to the given scheme.
// Public to allow building arbitrary schemes.
// All generated defaulters are covering - they call all nested defaulters.
func RegisterDefaults(scheme *runtime.Scheme) error {
	scheme.AddTypeDefaultingFunc(&ClusterRole{}, func(obj interface{}) { SetObjectDefaults_ClusterRole(obj.(*ClusterRole)) })
	scheme.AddTypeDefaultingFunc(&ClusterRoleList{}, func(obj interface{}) { SetObjectDefaults_ClusterRoleList(obj.(*ClusterRoleList)) })
	scheme.AddTypeDefaultingFunc(&Role{}, func(obj interface{}) { SetObjectDefaults_Role(obj.(*Role)) })
	scheme.AddTypeDefaultingFunc(&RoleList{}, func(obj interface{}) { SetObjectDefaults_RoleList(obj.(*RoleList)) })
	scheme.AddTypeDefaultingFunc(&SelfSubjectRulesReview{}, func(obj interface{}) { SetObjectDefaults_SelfSubjectRulesReview(obj.(*SelfSubjectRulesReview)) })
	scheme.AddTypeDefaultingFunc(&SubjectRulesReview{}, func(obj interface{}) { SetObjectDefaults_SubjectRulesReview(obj.(*SubjectRulesReview)) })
	return nil
}

func SetObjectDefaults_ClusterRole(in *ClusterRole) {
	for i := range in.Rules {
		a := &in.Rules[i]
		SetDefaults_PolicyRule(a)
	}
}

func SetObjectDefaults_ClusterRoleList(in *ClusterRoleList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_ClusterRole(a)
	}
}

func SetObjectDefaults_Role(in *Role) {
	for i := range in.Rules {
		a := &in.Rules[i]
		SetDefaults_PolicyRule(a)
	}
}

func SetObjectDefaults_RoleList(in *RoleList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_Role(a)
	}
}

func SetObjectDefaults_SelfSubjectRulesReview(in *SelfSubjectRulesReview) {
	for i := range in.Status.Rules {
		a := &in.Status.Rules[i]
		SetDefaults_PolicyRule(a)
	}
}

func SetObjectDefaults_SubjectRulesReview(in *SubjectRulesReview) {
	for i := range in.Status.Rules {
		a := &in.Status.Rules[i]
		SetDefaults_PolicyRule(a)
	}
}
